---
name: build

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - main
    types: [closed]

permissions:
  contents: write
  pull-requests: write

jobs:
  build:
    name: build and test
    runs-on: ubuntu-latest
    # if: github.event_name == 'push' && contains(github.ref, 'refs/heads/main')
    steps:
      - uses: actions/checkout@v3

      - name: Go setup
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-

      - name: Go Verify
        run: go mod verify

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v ./...

      - uses: google-github-actions/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.GH_TOKEN }}
          release-type: go
          target-branch: ${{ github.ref_name }}
  release:
    name: Release docker image
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.pull_request.merged == true
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            aimarjs/tyk-sre-assignment
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: setup qemu
        uses: docker/setup-qemu-action@v3

      - name: setup docker buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: login to docker hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
